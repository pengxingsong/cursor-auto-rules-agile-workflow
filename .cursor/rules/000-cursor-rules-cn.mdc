---
description:
globs:
alwaysApply: false
---
<version>1.0.0</version>

# Cursor 规则自动生成系统

## 核心结构

```mdc
---
description: 动作 当 触发条件 达到 结果
globs: *.mdc
---

# 规则标题

## 上下文
- 何时应用此规则
- 先决条件或条件

## 要求
- 简洁、可执行的项目
- 每个要求都必须是可测试的

## 示例
<example>
好的简洁示例及说明
</example>

<example type="invalid">
无效的简洁示例及说明
</example>
```

## 文件组织

### 位置
- 路径：`.cursor/rules/`
- 扩展名：`.mdc`

### 命名约定
前缀-名称.mdc，其中前缀为：
- 0XX：核心标准
- 1XX：工具配置
- 3XX：测试标准
- 1XXX：语言规则
- 2XXX：框架规则
- 8XX：工作流
- 9XX：模板
- _名称.mdc：私有规则

### Glob 模式示例
不同规则类型的常见 glob 模式：
- 核心标准：.cursor/rules/*.mdc
- 语言规则：src/**/*.{js,ts}
- 测试标准：**/*.test.{js,ts}
- React 组件：src/components/**/*.tsx
- 文档：docs/**/*.md
- 配置文件：*.config.{js,json}
- 构建产物：dist/**/*
- 多个扩展名：src/**/*.{js,jsx,ts,tsx}
- 多个文件：dist/**/*, docs/**/*.md

## 必需字段

### 前言
- description：动作 触发条件 结果 格式
- globs：`文件和文件夹的 glob 模式`

### 正文
- <version>X.Y.Z</version>
- 上下文：使用条件
- 要求：可执行项目
- 示例：有效和无效的

## 格式指南

- 主要使用简洁的 Markdown
- XML 标签限于：
  - <example>
  - <danger>
  - <required>
  - <rules>
  - <rule>
  - <critical>
  - <version>
- 始终将 XML 或嵌套 XML 标签内的内容缩进 2 个空格
- 保持规则尽可能简短
- 如果会更简短或更清晰，使用 Mermaid 语法而不是描述复杂规则
- 在适当的地方使用表情符号来传达含义，以改善 AI 代理对规则的理解
- 保持示例尽可能简短，以清楚地传达正面或负面的规则应用示例

## AI 优化提示

1. 在描述中使用精确、确定的 动作 触发条件 结果 格式
2. 提供规则在实践中应用的简洁正面和负面示例
3. 为 AI 上下文窗口效率优化
4. 删除任何非必要或冗余信息
5. 使用标准 glob 模式，不带引号（例如，*.js，src/**/*.ts）

## AI 上下文效率

1. 保持前言描述在 120 个字符以下（或更少），同时保持 AI 代理规则选择的明确意图
2. 将示例限制在必要的模式
3. 使用分层结构以便快速解析
4. 删除各部分之间的冗余信息
5. 保持高信息密度和最少令牌
6. 专注于机器可执行的指令而不是人类解释

<critical>
  - 永远不要包含冗长的解释或冗余上下文，这会增加 AI 令牌开销
  - 保持文件尽可能简短和重点突出，但绝不以牺牲规则对 AI 代理的影响和有用性为代价。
  - 前言只能有 description 和 globs 字段。
</critical>
